{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAIA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,YAGbO,SAASC,cAAc,SAASC,iBAAiB,UAAU,SAAUC,GACnEA,EAAEC,iBACF,MAAMC,EAAaL,SAASC,cAAc,uBACpCK,EAAYN,SAASC,cAAc,sBACnCM,EAAcP,SAASC,cAAc,wBAErCO,EAAQC,SAASJ,EAAWK,OAC5BC,EAAOF,SAASH,EAAUI,OAC1BE,EAASH,SAASF,EAAYG,OAE9BG,EAAW,GAEjB,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAQE,IAAK,CAC/B,MAAMC,EAAeP,EAAQM,EAAIH,EACjCE,EAASG,KAAKzB,EAAcuB,EAAI,EAAGC,G,CAGrCF,EAASI,SAASC,IAChBA,EACGC,MAAK,EAAC3B,SAAEA,EAAQC,MAAEA,MACnB2B,EAAA/B,GAASgC,OAAOC,QAAQ,uBAAqB9B,QAAiBC,MAAU,IAEvE8B,OAAM,EAAC/B,SAAEA,EAAQC,MAAEA,MACrB2B,EAAA/B,GAASgC,OAAOG,QAAQ,sBAAoBhC,QAAeC,MAAU,GAClE,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport { Notify } from 'notiflix/build/notiflix-report-aio';\n\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\ndocument.querySelector('.form').addEventListener('submit', function (e) {\n  e.preventDefault();\n  const delayInput = document.querySelector('input[name=\"delay\"]');\n  const stepInput = document.querySelector('input[name=\"step\"]');\n  const amountInput = document.querySelector('input[name=\"amount\"]');\n\n  const delay = parseInt(delayInput.value);\n  const step = parseInt(stepInput.value);\n  const amount = parseInt(amountInput.value);\n\n  const promises = [];\n\n  for (let i = 0; i < amount; i++) {\n    const currentDelay = delay + i * step;\n    promises.push(createPromise(i + 1, currentDelay));\n  }\n\n  promises.forEach((promise) => {\n    promise\n      .then(({ position, delay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n     Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  });\n});\n\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","document","querySelector","addEventListener","e","preventDefault","delayInput","stepInput","amountInput","delay1","parseInt","value","step","amount","promises","i","currentDelay","push","forEach","promise","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.90a13522.js.map"}